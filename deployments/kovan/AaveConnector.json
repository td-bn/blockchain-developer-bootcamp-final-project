{
  "address": "0x74699311812969c98D0CDeaed1Cd8F3E22Deff0e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lendingPoolProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wethGateway",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aWETHToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "aWETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveLendingPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_onBehalfOf",
          "type": "address"
        }
      ],
      "name": "depositETH",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAaveLendingPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getaWETHBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lendingPoolProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethGateway",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6d1f7f65d6b3fe4e07a32bf6d40a330f9a89bf41440aa154c82eac60c01a9157",
  "receipt": {
    "to": null,
    "from": "0xa8CF219AD8E7f1fE2087DFF5dC9196A56695B170",
    "contractAddress": "0x74699311812969c98D0CDeaed1Cd8F3E22Deff0e",
    "transactionIndex": 4,
    "gasUsed": "570624",
    "logsBloom": "0x
    "blockHash": "0xb476a58df0ad92860ccc164a3cf8bc22b201dbb4114eaffc749b8198b4342ea9",
    "transactionHash": "0x6d1f7f65d6b3fe4e07a32bf6d40a330f9a89bf41440aa154c82eac60c01a9157",
    "logs": [],
    "blockNumber": 28536293,
    "cumulativeGasUsed": "746384",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x88757f2f99175387aB4C6a4b3067c77A695b0349",
    "0xA61ca04DF33B72b235a8A28CfB535bb7A5271B70",
    "0x87b1f4cf9BD63f7BBD3eE1aD04E8F52540349347"
  ],
  "solcInputHash": "2b81705ccd7aed8eb0b8fbb83d8bd2bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lendingPoolProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethGateway\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aWETHToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"aWETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_onBehalfOf\",\"type\":\"address\"}],\"name\":\"depositETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAaveLendingPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getaWETHBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPoolProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/AaveConnector.sol\":\"AaveConnector\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/interfaces/IAaveConnector.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IAaveConnector {\\n    function depositETH(address _onBehalfOf) external payable returns (bool);\\n    function getaWETHBalance(address _user) external view returns (uint256);\\n    function getAaveLendingPool() external view returns (address);\\n}\\n\",\"keccak256\":\"0xf7a2e7327391468c510889f5a60921673e9ace418b65397b575955591ef62a08\",\"license\":\"MIT\"},\"contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title LendingPoolAddressesProvider contract\\n * @dev Main registry of addresses part of or connected to the protocol, including permissioned roles\\n * - Acting also as factory of proxies and admin of those, so with right to change its implementations\\n * - Owned by the Aave Governance\\n * @author Aave\\n **/\\ninterface ILendingPoolAddressesProvider {\\n  event MarketIdSet(string newMarketId);\\n  event LendingPoolUpdated(address indexed newAddress);\\n  event ConfigurationAdminUpdated(address indexed newAddress);\\n  event EmergencyAdminUpdated(address indexed newAddress);\\n  event LendingPoolConfiguratorUpdated(address indexed newAddress);\\n  event LendingPoolCollateralManagerUpdated(address indexed newAddress);\\n  event PriceOracleUpdated(address indexed newAddress);\\n  event LendingRateOracleUpdated(address indexed newAddress);\\n  event ProxyCreated(bytes32 id, address indexed newAddress);\\n  event AddressSet(bytes32 id, address indexed newAddress, bool hasProxy);\\n\\n  function getMarketId() external view returns (string memory);\\n\\n  function setMarketId(string calldata marketId) external;\\n\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  function setAddressAsProxy(bytes32 id, address impl) external;\\n\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  function getLendingPool() external view returns (address);\\n\\n  function setLendingPoolImpl(address pool) external;\\n\\n  function getLendingPoolConfigurator() external view returns (address);\\n\\n  function setLendingPoolConfiguratorImpl(address configurator) external;\\n\\n  function getLendingPoolCollateralManager() external view returns (address);\\n\\n  function setLendingPoolCollateralManager(address manager) external;\\n\\n  function getPoolAdmin() external view returns (address);\\n\\n  function setPoolAdmin(address admin) external;\\n\\n  function getEmergencyAdmin() external view returns (address);\\n\\n  function setEmergencyAdmin(address admin) external;\\n\\n  function getPriceOracle() external view returns (address);\\n\\n  function setPriceOracle(address priceOracle) external;\\n\\n  function getLendingRateOracle() external view returns (address);\\n\\n  function setLendingRateOracle(address lendingRateOracle) external;\\n}\",\"keccak256\":\"0xd7b04a3de502b4da5022668bf6a6820c3d2505ec9a5c37e0a50b3b6e3981637f\",\"license\":\"agpl-3.0\"},\"contracts/protocol/AaveConnector.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IAaveConnector.sol\\\";\\nimport \\\"../interfaces//ILendingPoolAddressesProvider.sol\\\";\\n\\ncontract AaveConnector is IAaveConnector {\\n    address public lendingPoolProvider;\\n    address public wethGateway;\\n    address public aWETH;\\n    address public aaveLendingPool;\\n\\n    constructor(address _lendingPoolProvider, address _wethGateway, address _aWETHToken) {\\n        ILendingPoolAddressesProvider provider = ILendingPoolAddressesProvider(_lendingPoolProvider);\\n        aaveLendingPool = provider.getLendingPool();\\n        wethGateway = _wethGateway;\\n        aWETH = _aWETHToken;\\n    }\\n\\n    function getAaveLendingPool() external view override returns (address) {\\n        return aaveLendingPool;\\n    }\\n\\n    // TODO: use IWETHGateway, instead of call\\n    function depositETH(address _onBehalfOf) external payable override returns (bool) {\\n        bytes memory callData = abi.encodeWithSignature(\\n            \\\"depositETH(address,address,uint16)\\\",\\n            aaveLendingPool,\\n            _onBehalfOf,\\n            0\\n        );\\n        (bool success, ) = wethGateway.call{value: msg.value, gas: 500000}(callData);\\n        require(success, \\\"ETH deposit into Aave failed\\\");\\n        return success;\\n    }\\n\\n    function getaWETHBalance(address _user) external view override returns (uint256) {\\n        return IERC20(aWETH).balanceOf(_user);\\n    }\\n}\",\"keccak256\":\"0x08e3b2fe035ceeb5f1076e28e0c4a81fd1403a374f3a22e8657b9c5eba04b46d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a45380380610a45833981810160405281019061003291906101be565b60008390508073ffffffffffffffffffffffffffffffffffffffff16630261bf8b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561007d57600080fd5b505afa158015610091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b59190610195565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050610256565b60008151905061018f8161023f565b92915050565b6000602082840312156101a757600080fd5b60006101b584828501610180565b91505092915050565b6000806000606084860312156101d357600080fd5b60006101e186828701610180565b93505060206101f286828701610180565b925050604061020386828701610180565b9150509250925092565b60006102188261021f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6102488161020d565b811461025357600080fd5b50565b6107e0806102656000396000f3fe6080604052600436106100705760003560e01c80636d2a583a1161004e5780636d2a583a1461010d57806382f8433614610138578063c5e10eef14610163578063e9d337b81461018e57610070565b80632d2da806146100755780634472ab4c146100a55780634dd366bc146100e2575b600080fd5b61008f600480360381019061008a91906104f1565b6101b9565b60405161009c919061063c565b60405180910390f35b3480156100b157600080fd5b506100cc60048036038101906100c791906104f1565b610353565b6040516100d99190610677565b60405180910390f35b3480156100ee57600080fd5b506100f7610407565b60405161010491906105ea565b60405180910390f35b34801561011957600080fd5b50610122610431565b60405161012f91906105ea565b60405180910390f35b34801561014457600080fd5b5061014d610457565b60405161015a91906105ea565b60405180910390f35b34801561016f57600080fd5b5061017861047b565b60405161018591906105ea565b60405180910390f35b34801561019a57600080fd5b506101a36104a1565b6040516101b091906105ea565b60405180910390f35b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360006040516024016101f493929190610605565b6040516020818303038152906040527f474cf53d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346207a12090846040516102c291906105d3565b600060405180830381858888f193505050503d8060008114610300576040519150601f19603f3d011682016040523d82523d6000602084013e610305565b606091505b5050905080610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034090610657565b60405180910390fd5b8092505050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103b091906105ea565b60206040518083038186803b1580156103c857600080fd5b505afa1580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610400919061051a565b9050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506104d68161077c565b92915050565b6000815190506104eb81610793565b92915050565b60006020828403121561050357600080fd5b6000610511848285016104c7565b91505092915050565b60006020828403121561052c57600080fd5b600061053a848285016104dc565b91505092915050565b61054c816106b9565b82525050565b61055b816106cb565b82525050565b600061056c82610692565b610576818561069d565b9350610586818560208601610720565b80840191505092915050565b61059b8161070e565b82525050565b60006105ae601c836106a8565b91506105b982610753565b602082019050919050565b6105cd816106f7565b82525050565b60006105df8284610561565b915081905092915050565b60006020820190506105ff6000830184610543565b92915050565b600060608201905061061a6000830186610543565b6106276020830185610543565b6106346040830184610592565b949350505050565b60006020820190506106516000830184610552565b92915050565b60006020820190508181036000830152610670816105a1565b9050919050565b600060208201905061068c60008301846105c4565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006106c4826106d7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061071982610701565b9050919050565b60005b8381101561073e578082015181840152602081019050610723565b8381111561074d576000848401525b50505050565b7f455448206465706f73697420696e746f2041617665206661696c656400000000600082015250565b610785816106b9565b811461079057600080fd5b50565b61079c816106f7565b81146107a757600080fd5b5056fea2646970667358221220e91fd2c96b01bf5c3bc4eb1b0718c40856c95d746acb31e666cf38f5e2f525bc64736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80636d2a583a1161004e5780636d2a583a1461010d57806382f8433614610138578063c5e10eef14610163578063e9d337b81461018e57610070565b80632d2da806146100755780634472ab4c146100a55780634dd366bc146100e2575b600080fd5b61008f600480360381019061008a91906104f1565b6101b9565b60405161009c919061063c565b60405180910390f35b3480156100b157600080fd5b506100cc60048036038101906100c791906104f1565b610353565b6040516100d99190610677565b60405180910390f35b3480156100ee57600080fd5b506100f7610407565b60405161010491906105ea565b60405180910390f35b34801561011957600080fd5b50610122610431565b60405161012f91906105ea565b60405180910390f35b34801561014457600080fd5b5061014d610457565b60405161015a91906105ea565b60405180910390f35b34801561016f57600080fd5b5061017861047b565b60405161018591906105ea565b60405180910390f35b34801561019a57600080fd5b506101a36104a1565b6040516101b091906105ea565b60405180910390f35b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360006040516024016101f493929190610605565b6040516020818303038152906040527f474cf53d000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346207a12090846040516102c291906105d3565b600060405180830381858888f193505050503d8060008114610300576040519150601f19603f3d011682016040523d82523d6000602084013e610305565b606091505b5050905080610349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034090610657565b60405180910390fd5b8092505050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016103b091906105ea565b60206040518083038186803b1580156103c857600080fd5b505afa1580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610400919061051a565b9050919050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506104d68161077c565b92915050565b6000815190506104eb81610793565b92915050565b60006020828403121561050357600080fd5b6000610511848285016104c7565b91505092915050565b60006020828403121561052c57600080fd5b600061053a848285016104dc565b91505092915050565b61054c816106b9565b82525050565b61055b816106cb565b82525050565b600061056c82610692565b610576818561069d565b9350610586818560208601610720565b80840191505092915050565b61059b8161070e565b82525050565b60006105ae601c836106a8565b91506105b982610753565b602082019050919050565b6105cd816106f7565b82525050565b60006105df8284610561565b915081905092915050565b60006020820190506105ff6000830184610543565b92915050565b600060608201905061061a6000830186610543565b6106276020830185610543565b6106346040830184610592565b949350505050565b60006020820190506106516000830184610552565b92915050565b60006020820190508181036000830152610670816105a1565b9050919050565b600060208201905061068c60008301846105c4565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006106c4826106d7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061071982610701565b9050919050565b60005b8381101561073e578082015181840152602081019050610723565b8381111561074d576000848401525b50505050565b7f455448206465706f73697420696e746f2041617665206661696c656400000000600082015250565b610785816106b9565b811461079057600080fd5b50565b61079c816106f7565b81146107a757600080fd5b5056fea2646970667358221220e91fd2c96b01bf5c3bc4eb1b0718c40856c95d746acb31e666cf38f5e2f525bc64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1868,
        "contract": "contracts/protocol/AaveConnector.sol:AaveConnector",
        "label": "lendingPoolProvider",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1870,
        "contract": "contracts/protocol/AaveConnector.sol:AaveConnector",
        "label": "wethGateway",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1872,
        "contract": "contracts/protocol/AaveConnector.sol:AaveConnector",
        "label": "aWETH",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1874,
        "contract": "contracts/protocol/AaveConnector.sol:AaveConnector",
        "label": "aaveLendingPool",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}